/* tslint:disable */
/* eslint-disable */
/**
 * APSI API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateQuestionRequest
 */
export interface CreateQuestionRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateQuestionRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateQuestionRequest
     */
    type: CreateQuestionRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateQuestionRequest
     */
    explanation?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateQuestionRequest
     */
    freeResponseCorrectAnswer?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CreateQuestionRequest
     */
    correctPoints?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CreateQuestionRequest
     */
    incorrectPoints?: number | null;
}


/**
 * @export
 */
export const CreateQuestionRequestTypeEnum = {
    FreeResponse: 'FREE_RESPONSE',
    MultipleChoice: 'MULTIPLE_CHOICE'
} as const;
export type CreateQuestionRequestTypeEnum = typeof CreateQuestionRequestTypeEnum[keyof typeof CreateQuestionRequestTypeEnum];


/**
 * Check if a given object implements the CreateQuestionRequest interface.
 */
export function instanceOfCreateQuestionRequest(value: object): value is CreateQuestionRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CreateQuestionRequestFromJSON(json: any): CreateQuestionRequest {
    return CreateQuestionRequestFromJSONTyped(json, false);
}

export function CreateQuestionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateQuestionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'type': json['type'],
        'explanation': json['explanation'] == null ? undefined : json['explanation'],
        'freeResponseCorrectAnswer': json['freeResponseCorrectAnswer'] == null ? undefined : json['freeResponseCorrectAnswer'],
        'correctPoints': json['correctPoints'] == null ? undefined : json['correctPoints'],
        'incorrectPoints': json['incorrectPoints'] == null ? undefined : json['incorrectPoints'],
    };
}

export function CreateQuestionRequestToJSON(json: any): CreateQuestionRequest {
    return CreateQuestionRequestToJSONTyped(json, false);
}

export function CreateQuestionRequestToJSONTyped(value?: CreateQuestionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'type': value['type'],
        'explanation': value['explanation'],
        'freeResponseCorrectAnswer': value['freeResponseCorrectAnswer'],
        'correctPoints': value['correctPoints'],
        'incorrectPoints': value['incorrectPoints'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * APSI API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateBookRequest
 */
export interface UpdateBookRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateBookRequest
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateBookRequest
     */
    author?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateBookRequest
     */
    isbn?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateBookRequest
     */
    publisher?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateBookRequest
     */
    language?: string | null;
    /**
     * 
     * @type {Set<number | null>}
     * @memberof UpdateBookRequest
     */
    categoryIds?: Set<number | null> | null;
    /**
     * 
     * @type {Blob}
     * @memberof UpdateBookRequest
     */
    file?: Blob;
    /**
     * New photo files, size must be equal with photoOrders
     * @type {Set<Blob>}
     * @memberof UpdateBookRequest
     */
    newPhotos?: Set<Blob> | null;
    /**
     * New photo file orders, size must be equal with newPhotos
     * @type {Array<number | null>}
     * @memberof UpdateBookRequest
     */
    newPhotoOrders?: Array<number | null> | null;
    /**
     * Existing photo ids, size must be equal with existingPhotoOrders
     * @type {Array<number | null>}
     * @memberof UpdateBookRequest
     */
    existingPhotoIds?: Array<number | null> | null;
    /**
     * Existing photo orders, size must be equal with existingPhotoIds
     * @type {Array<number | null>}
     * @memberof UpdateBookRequest
     */
    existingPhotoOrders?: Array<number | null> | null;
    /**
     * 
     * @type {Array<number | null>}
     * @memberof UpdateBookRequest
     */
    deletedPhotoIds?: Array<number | null> | null;
}

/**
 * Check if a given object implements the UpdateBookRequest interface.
 */
export function instanceOfUpdateBookRequest(value: object): value is UpdateBookRequest {
    return true;
}

export function UpdateBookRequestFromJSON(json: any): UpdateBookRequest {
    return UpdateBookRequestFromJSONTyped(json, false);
}

export function UpdateBookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateBookRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'] == null ? undefined : json['title'],
        'author': json['author'] == null ? undefined : json['author'],
        'isbn': json['isbn'] == null ? undefined : json['isbn'],
        'publisher': json['publisher'] == null ? undefined : json['publisher'],
        'language': json['language'] == null ? undefined : json['language'],
        'categoryIds': json['categoryIds'] == null ? undefined : new Set(json['categoryIds']),
        'file': json['file'] == null ? undefined : json['file'],
        'newPhotos': json['newPhotos'] == null ? undefined : new Set(json['newPhotos']),
        'newPhotoOrders': json['newPhotoOrders'] == null ? undefined : json['newPhotoOrders'],
        'existingPhotoIds': json['existingPhotoIds'] == null ? undefined : json['existingPhotoIds'],
        'existingPhotoOrders': json['existingPhotoOrders'] == null ? undefined : json['existingPhotoOrders'],
        'deletedPhotoIds': json['deletedPhotoIds'] == null ? undefined : json['deletedPhotoIds'],
    };
}

export function UpdateBookRequestToJSON(json: any): UpdateBookRequest {
    return UpdateBookRequestToJSONTyped(json, false);
}

export function UpdateBookRequestToJSONTyped(value?: UpdateBookRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'author': value['author'],
        'isbn': value['isbn'],
        'publisher': value['publisher'],
        'language': value['language'],
        'categoryIds': value['categoryIds'] == null ? undefined : Array.from(value['categoryIds'] as Set<any>),
        'file': value['file'],
        'newPhotos': value['newPhotos'] == null ? undefined : Array.from(value['newPhotos'] as Set<any>),
        'newPhotoOrders': value['newPhotoOrders'],
        'existingPhotoIds': value['existingPhotoIds'],
        'existingPhotoOrders': value['existingPhotoOrders'],
        'deletedPhotoIds': value['deletedPhotoIds'],
    };
}


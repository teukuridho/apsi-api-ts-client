/* tslint:disable */
/* eslint-disable */
/**
 * APSI API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TeacherDto } from './TeacherDto';
import {
    TeacherDtoFromJSON,
    TeacherDtoFromJSONTyped,
    TeacherDtoToJSON,
    TeacherDtoToJSONTyped,
} from './TeacherDto';
import type { SchoolDto } from './SchoolDto';
import {
    SchoolDtoFromJSON,
    SchoolDtoFromJSONTyped,
    SchoolDtoToJSON,
    SchoolDtoToJSONTyped,
} from './SchoolDto';

/**
 * 
 * @export
 * @interface ClassRoomDto
 */
export interface ClassRoomDto {
    /**
     * 
     * @type {number}
     * @memberof ClassRoomDto
     */
    id: number;
    /**
     * 
     * @type {SchoolDto}
     * @memberof ClassRoomDto
     */
    school: SchoolDto;
    /**
     * 
     * @type {string}
     * @memberof ClassRoomDto
     */
    name: string;
    /**
     * 
     * @type {TeacherDto}
     * @memberof ClassRoomDto
     */
    teacher: TeacherDto;
    /**
     * 
     * @type {Set<number>}
     * @memberof ClassRoomDto
     */
    studentIds: Set<number>;
}

/**
 * Check if a given object implements the ClassRoomDto interface.
 */
export function instanceOfClassRoomDto(value: object): value is ClassRoomDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('school' in value) || value['school'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('teacher' in value) || value['teacher'] === undefined) return false;
    if (!('studentIds' in value) || value['studentIds'] === undefined) return false;
    return true;
}

export function ClassRoomDtoFromJSON(json: any): ClassRoomDto {
    return ClassRoomDtoFromJSONTyped(json, false);
}

export function ClassRoomDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClassRoomDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'school': SchoolDtoFromJSON(json['school']),
        'name': json['name'],
        'teacher': TeacherDtoFromJSON(json['teacher']),
        'studentIds': new Set(json['studentIds']),
    };
}

export function ClassRoomDtoToJSON(json: any): ClassRoomDto {
    return ClassRoomDtoToJSONTyped(json, false);
}

export function ClassRoomDtoToJSONTyped(value?: ClassRoomDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'school': SchoolDtoToJSON(value['school']),
        'name': value['name'],
        'teacher': TeacherDtoToJSON(value['teacher']),
        'studentIds': Array.from(value['studentIds'] as Set<any>),
    };
}

